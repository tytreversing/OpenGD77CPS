<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tips.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="lblGPSMode.ToolTip" xml:space="preserve">
    <value>Тип обрабатываемых сигналов спутниковых группировок геопозиционирования.
Штатный модуль, устанавливаемый на радиостанции, может работать только
в режиме GPS+BeiDou. Для использования режима GPS+ГЛОНАСС необходима
самостоятельная установка кастомного модуля (например, ublox NEO-M7 и новее),
заранее настроенного соответствующим образом.
</value>
  </data>
  <data name="lblHotspot.ToolTip" xml:space="preserve">
    <value>Режим хотспота. Рация должна быть подключена штатным кабелем программирования к целевому устройству.
Доступные варианты:
MMDVM - подключение к Pi-Star или другому аналогичному устройству.
BlueDV - подключение к ПК с запущенной программой BlueDV (не рекомендуется).
Выкл. - рация не переходит в режим хотспота при подключении USB.</value>
  </data>
  <data name="lblP3Long.ToolTip" xml:space="preserve">
    <value>Действие при длительном нажатии кнопки SK1 на портативных рациях 
и P3 - на мобильных. Для MD-9600 режим "информация"
равнозначен отсутствию назначенной функции, так как вывод информации о 
канале/VFO назначен на удержание кнопки Р2.
</value>
  </data>
  <data name="lblP3.ToolTip" xml:space="preserve">
    <value>Действие при кратком нажатии кнопки SK1 на портативных 
рациях и P3 - на мобильных. Для MD-9600 режим "информация"
равнозначен отсутствию назначенной функции, так как вывод информации о 
канале/VFO назначен на удержание кнопки Р2.</value>
  </data>
  <data name="lblPriority.ToolTip" xml:space="preserve">
    <value>Множитель времени прослушивания для каналов,
установленных как приоритетные. Например,
если время сканирования установлено в 30 мс, а
множитель приоритета - х3, то на прослушивание 
приоритетного канала при каждом проходе будет
уходить 90 мс.</value>
  </data>
  <data name="lblScanMode.ToolTip" xml:space="preserve">
    <value>Поддерживаются три режима сканирования:
"Удерживание" - рация остается на частоте, пока принимает сигнал
"Пауза" - рация принимает сигнал в течение заданного интервала, 
затем продолжает сканирование
"Стоп" - сканирование останавливается при приеме сигнала</value>
  </data>
  <data name="lblPower.ToolTip" xml:space="preserve">
    <value>Настройка работает для всех каналов, кроме тех,
для которых установлен собственный уровень мощности.
Для разных раций одна и та же настройка может означать 
разный уровень мощности. Если указано два значения, первое
относится ко всем портативным рациям, второе - к MD-9600.
Если указаны три значения, первое относится к 5-ваттным рациям,
второе - к TYT MD-UV390 10W, третье - к MD-9600.</value>
  </data>
  <data name="cb10WMode.ToolTip" xml:space="preserve">
    <value>Настройка используется ТОЛЬКО на рациях TYT MD-UV390 10W
(не MD-UV390 Plus!), так как они используют ту же прошивку, что
и MD-UV390. Установка этого флажка позволяет использовать на
рации режимы увеличенной мощности. На всех прочих рациях 
настройка игнорируется.</value>
  </data>
  <data name="cbSafeOn.ToolTip" xml:space="preserve">
    <value>Настройка работает только на портативных рациях.
Безопасное включение требует удержания клавиши SK1
при включении рации - это защищает от случайного
включения питания при задевании регулятора громкости.</value>
  </data>
  <metadata name="sfdSettings.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>95, 17</value>
  </metadata>
</root>