<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="telegramLink.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFoAAABaCAYAAAA4qEECAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAQySURBVHhe7ZxNTxNRFIZnoUt/mP+Clf4DlyZGF7gw
        yMrEFR8hldKSGBOjEY1xbSJgCBAREUUEoaUUkA9pPTPcamfmbZmPc2buzNwneUpn5txz7j1ppu3Q1soE
        j9tXrUrjhlXZf2VVGzWy7fy1t+39b9tXVKQhMNXGvGpkXOdURoMDbpKMhQM1IWlzDVpw2uYKtEDdzDRo
        QbqbKaqNQd8CMuXesFqJxsCJZ1QtqTYWfBPNg9P7y2qFGlDdOyJpYnm1fqxWmiJwYjk1NSpUvGgmDppE
        UUwMVLxoilOpUyGjoxioWNFlp0IvcVAh42/VIQYq9SVPcqPbBdWpmEzV2sZLjA1KasRGplx7ABMae/lI
        dS4kOJmxn6GZ2qWBxkiGAiUwBjMwZQo2xjMQaKAxnJdS3qFAI4t9QQNyZC9QbGx7Ut5p+YLz4PO6amdv
        4Lj4tlRnPeDgzBoGNJ5FCArMmAPzh6p14UC5WPQx+audZeOCcrLpAgXo7lS400M/YH4uXaAATZUA1WHT
        BQrQTElQPTb/Ud6etya3aaeGTss2uAOszebW7EWj4cF0TRo0B1a1anSV49XDRa4wWG/q7nlI6PCE7qRs
        XCobJ5HzdY8T86LRW7SRvLWTc7XUeHjzhsU7XkTny5LogKBc0JM4S25vDhHp5qZvp5CccOZHudi1Stsz
        8ACTD1eO1HJ4sF7swjpROWsl9oj+WSNpg1cJUB3rZby34da0ffoBebmlm5ZvZ0Svv99X0+cF1bK9tRDt
        Sl03KK+IVoke0SW6E1MpUC3HKs+bGphbQrqZ8e0M6zO+q2gd7EbCWuTxOZ1YmUD5RbRKWzfggZBygvJ3
        5AbVENH5UZHSJm3Et2k/hcdgYLYJ83ZcaZ6pSD5QHREd0IGY3ls+UEsJBsrRLd/J4j+3Fw9gLRGlGu31
        c/OPWp4bFOtVClRLzKQaHVVJUD0xHSZ+tHW0fspz0akXqKaYqtFzvgMaKA2qKeSHi0bb4IBUlQbVFNEF
        CkjZU8Y3Jl5eb5/AmiK6mNignfo5tBLuZWJQUC0xXaAAjeQG1RDTBwrSyIOY7zy7QflFhKBADeUA5RUR
        MvG9RVKA/g59in7uvrPUhDkF7PH5aBs8QFujgPKI2Bc0QHPDXjVEOUS8FDQoAwYFjWU3EGhgRgwCGsdu
        YCa+0YDs2gsUy24oxmlAxr32zv2/TOvpJoxjNzQoibG/kRhfvw+TGXt5V3UuAuPrlMAYyNigpEa3LIyv
        L/gSG7udV51iYGz9iGwbfTL+7l2Hsa+U2OhSDFSsqIqDihbNxEDFi2LijK1R4YKZGmgyeTV1RtcOyXaO
        FXgJF5XRtY+eyeXFRbVCzcCTzabaM/plmKTJZtSR1UG1koyAFqG7mQYtSDdzBVpg2uaakdUWaZ8L07LP
        J4jyCm6EjIYuRlZnfQ2KZtfXGdLGsv4CpNmvi/24Y+0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAQAAEABADoAgAAFgAAACgAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAiICICIgAAAAAAAAAAAAAAHeId4h3AAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAd3d3d3cAAAAAAAAAAAAAAHqqqqqnAAAAAAAAAAAAAAB6qqqqpwAAAAAAAAAAAAAAeIiIiI
        cAAAAAAAAAAAAAAIiIiIiIAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI
        iIiIiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiIiIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAACIiIiIiAAAAAAAAAAAAAAAiIiIiIgAAAAAAAAAAAAAAIiIiIiIAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD////////////AA///wAP//8AD///A
        A///wAP//8AD///AA///wAP//8AD///AA///gAP//8AD///AA///wAP//wAB//+AAf//gAH//wAB//+A
        Af//gAH//4AB//+AAf//AAH//4AB///AA////mP///5j///+d////////////w==
</value>
  </data>
</root>