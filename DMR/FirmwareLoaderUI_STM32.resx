<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dlgOpenFile.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ITesDovn/xctirBppJOEXwAAAABJRU5ErkJggg==
</value>
  </data>
</root>